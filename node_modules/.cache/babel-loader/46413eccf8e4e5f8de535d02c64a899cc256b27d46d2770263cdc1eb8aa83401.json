{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uCD5C\\uBCD1\\uD638\\\\Desktop\\\\gemggark\\\\gemggark-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js (WebSocket 연동을 위한 구조 변경)\nimport React, { useState } from 'react';\nimport './App.css';\nimport InputPage from './pages/InputPage';\nimport LoadingPage from './pages/LoadingPage';\nimport ResultPage from './pages/ResultPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pageState, setPageState] = useState('input');\n  const [resultData, setResultData] = useState(null);\n  const [taskId, setTaskId] = useState(null); // <<< 1. task_id를 관리할 state 추가\n\n  const renderPage = () => {\n    switch (pageState) {\n      case 'loading':\n        // <<< 2. LoadingPage에 taskId와 페이지 전환 함수들을 넘겨줌\n        return /*#__PURE__*/_jsxDEV(LoadingPage, {\n          taskId: taskId,\n          setPageState: setPageState,\n          setResultData: setResultData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 16\n        }, this);\n      case 'result':\n        return /*#__PURE__*/_jsxDEV(ResultPage, {\n          data: resultData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 16\n        }, this);\n      case 'input':\n      default:\n        // <<< 3. InputPage에는 taskId를 설정하는 함수만 넘겨줌\n        return /*#__PURE__*/_jsxDEV(InputPage, {\n          setPageState: setPageState,\n          setTaskId: setTaskId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gemggark: AI \\uC544\\uD06C\\uADF8\\uB9AC\\uB4DC \\uCD5C\\uC801\\uD654\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: renderPage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9VfBllB6CiLvnRgBVceUNNLur94=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","InputPage","LoadingPage","ResultPage","jsxDEV","_jsxDEV","App","_s","pageState","setPageState","resultData","setResultData","taskId","setTaskId","renderPage","fileName","_jsxFileName","lineNumber","columnNumber","data","className","children","_c","$RefreshReg$"],"sources":["C:/Users/최병호/Desktop/gemggark/gemggark-frontend/src/App.js"],"sourcesContent":["// src/App.js (WebSocket 연동을 위한 구조 변경)\nimport React, { useState } from 'react';\nimport './App.css';\nimport InputPage from './pages/InputPage';\nimport LoadingPage from './pages/LoadingPage';\nimport ResultPage from './pages/ResultPage';\n\nfunction App() {\n  const [pageState, setPageState] = useState('input');\n  const [resultData, setResultData] = useState(null);\n  const [taskId, setTaskId] = useState(null); // <<< 1. task_id를 관리할 state 추가\n\n  const renderPage = () => {\n    switch (pageState) {\n      case 'loading':\n        // <<< 2. LoadingPage에 taskId와 페이지 전환 함수들을 넘겨줌\n        return <LoadingPage taskId={taskId} setPageState={setPageState} setResultData={setResultData} />;\n      case 'result':\n        return <ResultPage data={resultData} />;\n      case 'input':\n      default:\n        // <<< 3. InputPage에는 taskId를 설정하는 함수만 넘겨줌\n        return <InputPage setPageState={setPageState} setTaskId={setTaskId} />;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Gemggark: AI 아크그리드 최적화</h1>\n      </header>\n      {/* <<< className=\"App-main\" 추가 */}\n      <main className=\"App-main\">\n        {renderPage()}\n      </main>\n    </div>\n  );\n  \n}\n\nexport default App;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,UAAU,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EACnD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5C,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACvB,QAAQN,SAAS;MACf,KAAK,SAAS;QACZ;QACA,oBAAOH,OAAA,CAACH,WAAW;UAACU,MAAM,EAAEA,MAAO;UAACH,YAAY,EAAEA,YAAa;UAACE,aAAa,EAAEA;QAAc;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAClG,KAAK,QAAQ;QACX,oBAAOb,OAAA,CAACF,UAAU;UAACgB,IAAI,EAAET;QAAW;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACzC,KAAK,OAAO;MACZ;QACE;QACA,oBAAOb,OAAA,CAACJ,SAAS;UAACQ,YAAY,EAAEA,YAAa;UAACI,SAAS,EAAEA;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IAC1E;EACF,CAAC;EAED,oBACEb,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhB,OAAA;MAAQe,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BhB,OAAA;QAAAgB,QAAA,EAAI;MAAsB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAETb,OAAA;MAAMe,SAAS,EAAC,UAAU;MAAAC,QAAA,EACvBP,UAAU,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGV;AAACX,EAAA,CA/BQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}