{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uCD5C\\uBCD1\\uD638\\\\Desktop\\\\gemggark\\\\gemggark-frontend\\\\src\\\\pages\\\\InputPage.js\";\n// src/pages/InputPage.js\nimport React from 'react';\n\n// App.js로부터 setPageState와 setResultData 함수를 props로 받습니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputPage = ({\n  setPageState,\n  setResultData\n}) => {\n  const handleOptimizeClick = () => {\n    // 나중에 이 함수 안에서 백엔드 API를 호출합니다.\n    // 지금은 페이지 상태를 'loading'으로 바꾸는 역할만 합니다.\n    console.log(\"최적화 시작!\");\n    setPageState('loading');\n\n    // 임시로 2초 후에 'result' 페이지로 넘어가도록 설정 (테스트용)\n    setTimeout(() => {\n      setResultData({\n        total_cost: 123456\n      }); // 임시 결과 데이터\n      setPageState('result');\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"1. \\uCF54\\uC5B4 \\uAD6C\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+ \\uCF54\\uC5B4 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"2. \\uBCF4\\uC720 \\uC82C (\\uC120\\uD0DD)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+ \\uBCF4\\uC720 \\uC82C \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"3. \\uC2DC\\uC7A5 \\uBC0F \\uC124\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uBE14\\uB8E8 \\uD06C\\uB9AC\\uC2A4\\uD0C8 \\uC2DC\\uC138: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC815\\uBC00\\uB3C4 (\\uC2DC\\uBBAC\\uB808\\uC774\\uC158 \\uD69F\\uC218): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOptimizeClick,\n      style: {\n        marginTop: '20px',\n        padding: '10px 20px',\n        fontSize: '16px'\n      },\n      children: \"\\uCD5C\\uC801\\uD654 \\uC2DC\\uC791\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = InputPage;\nexport default InputPage;\nvar _c;\n$RefreshReg$(_c, \"InputPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","InputPage","setPageState","setResultData","handleOptimizeClick","console","log","setTimeout","total_cost","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginTop","padding","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/최병호/Desktop/gemggark/gemggark-frontend/src/pages/InputPage.js"],"sourcesContent":["// src/pages/InputPage.js\r\nimport React from 'react';\r\n\r\n// App.js로부터 setPageState와 setResultData 함수를 props로 받습니다.\r\nconst InputPage = ({ setPageState, setResultData }) => {\r\n\r\n  const handleOptimizeClick = () => {\r\n    // 나중에 이 함수 안에서 백엔드 API를 호출합니다.\r\n    // 지금은 페이지 상태를 'loading'으로 바꾸는 역할만 합니다.\r\n    console.log(\"최적화 시작!\");\r\n    setPageState('loading');\r\n\r\n    // 임시로 2초 후에 'result' 페이지로 넘어가도록 설정 (테스트용)\r\n    setTimeout(() => {\r\n      setResultData({ total_cost: 123456 }); // 임시 결과 데이터\r\n      setPageState('result');\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>1. 코어 구성</h2>\r\n      {/* 코어 추가 UI가 여기에 들어갑니다. */}\r\n      <button>+ 코어 추가</button>\r\n\r\n      <h2>2. 보유 젬 (선택)</h2>\r\n      {/* 보유 젬 추가 UI가 여기에 들어갑니다. */}\r\n      <button>+ 보유 젬 추가</button>\r\n\r\n      <h2>3. 시장 및 설정</h2>\r\n      <div>\r\n        <label>블루 크리스탈 시세: </label>\r\n        {/* 시세 슬라이더가 여기에 들어갑니다. */}\r\n      </div>\r\n      <div>\r\n        <label>정밀도 (시뮬레이션 횟수): </label>\r\n        {/* 정밀도 슬라이더가 여기에 들어갑니다. */}\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <button onClick={handleOptimizeClick} style={{ marginTop: '20px', padding: '10px 20px', fontSize: '16px' }}>\r\n        최적화 시작하기\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputPage;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAc,CAAC,KAAK;EAErD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBJ,YAAY,CAAC,SAAS,CAAC;;IAEvB;IACAK,UAAU,CAAC,MAAM;MACfJ,aAAa,CAAC;QAAEK,UAAU,EAAE;MAAO,CAAC,CAAC,CAAC,CAAC;MACvCN,YAAY,CAAC,QAAQ,CAAC;IACxB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEF,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjBb,OAAA;MAAAS,QAAA,EAAQ;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAExBb,OAAA;MAAAS,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErBb,OAAA;MAAAS,QAAA,EAAQ;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE1Bb,OAAA;MAAAS,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBb,OAAA;MAAAS,QAAA,eACET,OAAA;QAAAS,QAAA,EAAO;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExB,CAAC,eACNb,OAAA;MAAAS,QAAA,eACET,OAAA;QAAAS,QAAA,EAAO;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CAAC,eAENb,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENb,OAAA;MAAQc,OAAO,EAAEV,mBAAoB;MAACW,KAAK,EAAE;QAAEC,SAAS,EAAE,MAAM;QAAEC,OAAO,EAAE,WAAW;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAT,QAAA,EAAC;IAE5G;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACM,EAAA,GA1CIlB,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}